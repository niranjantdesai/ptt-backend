swagger: '2.0'
info:
  description: "Deliverable 1: RESTful API"
  version: 1.0.0
  title: "Pomodoro Time Tracker"
host: 'localhost:8080'
basePath: /
tags:
  - name: admin
    description: 'Operations by an admin'
  - name: user
    description: 'Operations by a user'
  - name: temp_help
    description: 'Operations on a contact'
schemes:
  - https
  - http
paths:
  '/api/admin/':
    post:
        tags:
          - admin
        summary: Admin will add a new user
        description: "The service will add a new user and also return the user added, in JSON format."
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - name: body
            in: body
            description: >-
              User object that needs to be added to the addressbook. 
            required: true
            schema:
              $ref: '#/definitions/UserCreateBody'
        responses:
          '201':
            description: 'Success'
            schema:
              $ref: '#/definitions/User'
          '400':
            description: 'Invalid input'
  
  '/api/admin/{email}':
    parameters:
      - name: email
        in: path
        description: email of the user that needs to be updated
        required: true
        type: string
    put:
      tags:
        - admin
      summary: Update an existing user by email
      description: "The service will update a user and return the updated user"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: Updated user
          required: true
          schema:
            $ref: '#/definitions/UserUpdateBody'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid input
        '404':
          description: Not found
    delete:
      tags:
        - admin
      summary: Delete an existing user by email
      description: 'The service will delete a user and return the deleted user'
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '400':
          description: Invalid input
        '404':
          description: Not found

  '/api/user/project/{email}':
    parameters:
      - name: email
        in: path
        description: email of the user that needs to be updated
        required: true
        type: string
    get:
      tags:
        - user
      summary: Get the list of projects of a user
      description: 'The service will return the list of projects of a user'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: array
            items: 
              $ref: '#/definitions/Project'
        '400':
          description: Invalid input
        '404':
          description: Not found







  
  '/api/contacts':
    get:
      tags:
        - temp_help
      summary: Get all contacts from the addressbook
      description: ''
      operationId: getContacts
      produces:
        - application/json
      responses:
        '200':
          description: Successfully returned contacts
          schema:
            type: array
            items:
              $ref: '#/definitions/Contact'
        '400':
          description: Bad request
    post:
      tags:
        - temp_help
      summary: Add a new contact to the addressbook
      description: >-
        The service will return the contact added, in JSON format, including the
        newly generated ID.
      operationId: addContact
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: >-
            Contact object that needs to be added to the addressbook. The ID
            field is irrelevant (and should be left empty for clarity), as it
            will be generated by the server and returned.
          required: true
          schema:
            $ref: '#/definitions/Contact'
      responses:
        '201':
          description: Successfully added new contact
          schema:
            $ref: '#/definitions/Contact'
        '400':
          description: Invalid input
    delete:
      tags:
        - temp_help
      summary: Delete all contacts from the addressbook
      description: ''
      operationId: deleteContacts
      responses:
        '200':
          description: Successfully deleted all contacts
          schema:
            type: array
            items:
              $ref: '#/definitions/Contact'
  '/api/contacts/{contactId}':
    parameters:
      - name: contactId
        in: path
        description: ID of contact that needs to be retrieved
        required: true
        type: string
    get:
      tags:
        - temp_help
      summary: Retrieve contact by ID
      description: ''
      operationId: getContactById
      produces:
        - application/json
      responses:
        '200':
          description: Contact found
          schema:
            $ref: '#/definitions/Contact'
        '400':
          description: Bad request
        '404':
          description: Contact not found
    put:
      tags:
        - temp_help
      summary: Update an existing contact by ID
      description: ''
      operationId: updateContact
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: Updated contact
          required: true
          schema:
            $ref: '#/definitions/Contact'
      responses:
        '200':
          description: Successfully updated contact
          schema:
            $ref: '#/definitions/Contact'
        '400':
          description: Invalid input
        '404':
          description: Contact not found
    delete:
      tags:
        - temp_help
      summary: Delete an existing contact by ID
      description: ''
      responses:
        '200':
          description: Successfully deleted contacts
          schema:
            $ref: '#/definitions/Contact'
        '400':
          description: Bad request
        '404':
          description: Contact not found


definitions:
  User:
    type: object
    required:
      - firstname
      - lastname
      - email
    properties:
      firstname:
        type: string
      lastname:
        type: string
      email:
        type: string
      projects:
        type: array
        items: 
            $ref: '#/definitions/Project'
  
  UserCreateBody:
    type: object
    required:
      - firstname
      - lastname
      - email
    properties:
      firstname:
        type: string
      lastname:
        type: string
      email:
        type: string
  
  UserUpdateBody:
    type: object
    properties:
      firstname:
        type: string
      lastname:
        type: string
  
  Project:
    type: object
    properties:
      name:
        type: string
      sessions:
        type: array
        items: 
          $ref: '#/definitions/Session'
  
  Session:
    type: object
    properties:
      starttime:
        type: number
      endtime:
        type: number
      pomodorocounter:
        type: number
  
  Contact:
    type: object
    required:
      - firstname
      - familyname
    properties:
      id:
        type: string
      firstname:
        type: string
      familyname:
        type: string
      phonenumber:
        type: string
      email:
        type: string
        
  